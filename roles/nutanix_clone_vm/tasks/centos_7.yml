---

- name: assigning Nutanix variables
  set_fact:
    base_url: "https://{{ cluster_ip }}:{{ nutanix_port }}/PrismGateway/services/rest/v2.0"
    username: "{{ nutanix_user }}"
    password: "{{ nutanix_pw }}"
    vm_uuid: "{{ centos7_uuids[cluster_name] }}"
    vlan_uuid: "{{ vlan_uuid }}"

- name: create {{ datacenter }} {{ vm_env }} nutanix VM {{ vm_os }}
  debug:
      msg:
      - "VmName: {{ vm_name }}"
      - "OS type: {{ vm_os }}"
      - "Environtment: {{ vm_env }}"
      - "Nutanix user: {{ username }}"
      - "Memory MB: {{ vm_memory }}"
      - "CPU: {{ vm_cpu }}"
      - "Datacenter: {{ datacenter}}"
      - "IP address: {{ ip_address }}"
      - "Gateway: {{ gateway }}"
      - "Domain: {{ domain }}"
      - "base_url:  {{ base_url }}"
      - "vlan_uuid: {{ vlan_uuid }} "
      - "user list: {{ remote_access }} "
      - "prefix: {{ prefix }}"


- name: create VM
  uri:
    url: "{{ base_url }}/vms/{{ vm_uuid }}/clone"
    validate_certs: no
    force_basic_auth: yes
    method: POST
    status_code: 201
    user: "{{ username }}"
    password: "{{ password }}"
    return_content: yes
    headers:
      Content-Type: "application/json"
    body:
      spec_list:
      - memory_mb: "{{ vm_memory }}"
        categories: "{{ new_vm_categories }}"
        name: "{{ vm_name }}"
        num_cores_per_vcpu: 1
        num_vcpus: "{{ vm_cpu }}"
        override_network_config: true
        vm_nics:
        - network_uuid: "{{ vlan_uuid }}"

      vm_customization_config:
        datasource_type: "CONFIG_DRIVE_V2"
        userdata: "{{ cloud_config }}"

    body_format: json
  register: command_result

- name: pause a few seconds
  pause:
    seconds: 2

- name: setting fact of task_uuid via command_result.json.task_uuid k,v pair
  set_fact:
    task_uuid: "{{ command_result.json.task_uuid }}"

- name: debug task uuid
  debug:
    msg: "VM creation task uuid - {{task_uuid}}"

- name: get VM task
  uri:
    url: "{{ base_url }}/tasks/{{ task_uuid }}"
    validate_certs: no
    force_basic_auth: yes
    method: GET
    user: "{{ username }}"
    password: "{{ password }}"
    return_content: yes
  register: create_vm_task_result

- name: pause a few seconds
  pause:
    seconds: 5

- name: set fact task result
  set_fact:
    new_vm_task_result: "{{ create_vm_task_result }}"

- name: show task result
  debug:
    msg: "New VM task result : {{ new_vm_task_result }}"


- name: set fact VM uuid
  set_fact:
    new_vm_uuid: "{{ (create_vm_task_result.content|from_json)['entity_list'][0]['entity_id'] }}"

- name: show new VM uuid
  debug:
    msg: "New VM uuid : {{new_vm_uuid}}"

- name: pause a few seconds
  pause:
    seconds: 5

- name: Set description  of new VM
  uri:
    url: "{{ base_url }}/vms/{{ new_vm_uuid }}"
    validate_certs: no
    force_basic_auth: yes
    method: PUT
    status_code: 200
    user: "{{ username }}"
    password: "{{ password }}"
    return_content: yes
    body:
        description: "{{ snow_requester_email }} - {{ vm_os }}; {{ snow_requester_fname }} {{ snow_requester_lname }}"
    body_format: json
  register: start_result

- name: Return status
  debug:
    msg: "Setting VM description"

- name: pause a few seconds
  pause:
    seconds: 5


- name: start new  VM
  uri:
    url: "{{ base_url }}/vms/{{ new_vm_uuid }}/set_power_state/"
    validate_certs: no
    force_basic_auth: yes
    method: POST
    status_code: 201
    user: "{{ username }}"
    password: "{{ password }}"
    return_content: yes
    body:
        transition: "ON"
    body_format: json
  register: start_result


- name: Print info
  debug:
    msg:
    - "VmName / domain : {{ vm_name }} .  {{ domain }}"
    - "OS type: {{ vm_os }}"
    - "Environtment: {{ vm_env }}"
    - "Memory MB: {{ vm_memory }}"
    - "CPU: {{ vm_cpu }}"
    - "Datacenter: {{ datacenter}}"
    - " "
    - "IP address: {{ ip_address }}"
    - "Gateway: {{ gateway }}"
    - " "
    - "Template used :     {{ vm_uuid }}"
    - "New VM uuid : {{ new_vm_uuid }}"
    - "Network_uuid vlan : {{ vlan_uuid }}"
   # - "snow time zone : {{ hw_time_zone }}"
    - " "
    - "user: {{ username }}"
    - "url to start VM : {{ base_url }}/vms/{{ new_vm_uuid }}/set_power_state/"
    - "user list: {{ remote_access }} "

  tags: sys_info
